name: Build and Push Applications

on:
  push:
    paths:
      - 'application/webapp/**'
      - 'application/mysql/**'
    branches: [ main ]
  pull_request:
    paths:
      - 'application/webapp/**'
      - 'application/mysql/**'
    branches: [ main ]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      webapp: ${{ steps.filter.outputs.webapp }}
      mysql: ${{ steps.filter.outputs.mysql }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          webapp:
            - 'application/webapp/**'
          mysql:
            - 'application/mysql/**'

  build-webapp:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.webapp == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push WebApp
        uses: docker/build-push-action@v4
        with:
          context: ./application/webapp
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/webapp:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/webapp:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/webapp:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/webapp:buildcache,mode=max

  build-mysql:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mysql == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push MySQL
        uses: docker/build-push-action@v4
        with:
          context: ./application/mysql
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/mysql:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/mysql:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/mysql:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/mysql:buildcache,mode=max